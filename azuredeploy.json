{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "projectName": {
            "type": "String"
        },
        "projectLocation": {
            "type": "String"
        },
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "[deployment().properties.templateLink.uri]",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated"
            }
        },
        "logAnalyticsReuse": {
            "type": "bool"
        },
        "logAnalyticsWorkspaceName": {
            "type": "String"
        },
        "logAnalyticsRetentionDays": {
            "type": "int",
            "defaultValue": 120
        },
        "sqlBackupRetentionDays": {
            "type": "int",
            "defaultValue": 14
        },
        "sqlAdminLogin": {
            "type": "String"
        },
        "sqlAdminPassword": {
            "type": "securestring"
        }
    },
    "variables": {
        "storageAccountName": "[concat(parameters('projectName'),'sa')]",
        "automationAccountName": "[concat(parameters('projectName'),'-auto')]",
        "sqlServerName": "[concat(parameters('projectName'),'-sql')]",
        "apiVersions": {
            "operationalInsights": "2020-03-01-preview",
            "automation": "2018-06-30",
            "storage": "2019-06-01",
            "sql": "2019-06-01-preview"
        },
        "Az.Accounts": {
            "name": "Az.Accounts",
            "url": "https://www.powershellgallery.com/api/v2/package/Az.Accounts/1.7.5"
        },
        "psModules": [
            {
                "name": "Az.Advisor",
                "url": "https://www.powershellgallery.com/api/v2/package/Az.Advisor/1.1.1"
            },
            {
                "name": "Az.Compute",
                "url": "https://www.powershellgallery.com/api/v2/package/Az.Compute/3.7.0"
            },
            {
                "name": "Az.OperationalInsights",
                "url": "https://www.powershellgallery.com/api/v2/package/Az.OperationalInsights/1.3.4"
            },
            {
                "name": "Az.ResourceGraph",
                "url": "https://www.powershellgallery.com/api/v2/package/Az.ResourceGraph/1.3.4"
            },
            {
                "name": "Az.Storage",
                "url": "https://www.powershellgallery.com/api/v2/package/Az.Storage/1.3.4"
            }
        ],
        "runbooks": [
            {
                "name": "Export-ARGManagedDisksPropertiesToBlobStorage",
                "version": "1.0.0.0",
                "description": "Exports Managed Disks properties to Blob Storage using Azure Resource Graph",
                "type": "PowerShell",
                "scriptUri": "[uri(parameters('_artifactsLocation'), concat('runbooks/data-collection/Export-ARGManagedDisksPropertiesToBlobStorage.ps1', parameters('_artifactsLocationSasToken')))]"
            },
            {
                "name": "Export-ARGVirtualMachinesPropertiesToBlobStorage",
                "version": "1.0.0.0",
                "description": "Exports Virtual Machine properties to Blob Storage using Azure Resource Graph",
                "type": "PowerShell",
                "scriptUri": "[uri(parameters('_artifactsLocation'), concat('runbooks/data-collection/Export-ARGVirtualMachinesPropertiesToBlobStorage.ps1', parameters('_artifactsLocationSasToken')))]"
            },
            {
                "name": "Export-AdvisorCostRecommendationsToBlobStorage",
                "version": "1.0.0.0",
                "description": "Exports Azure Advisor Cost recommendations to Blob Storage using the Advisor API",
                "type": "PowerShell",
                "scriptUri": "[uri(parameters('_artifactsLocation'), concat('runbooks/data-collection/Export-AdvisorCostRecommendationsToBlobStorage.ps1', parameters('_artifactsLocationSasToken')))]"
            },
            {
                "name": "Ingest-OptimizationCSVExportsToLogAnalytics",
                "version": "1.0.0.0",
                "description": "Ingests CSV blobs as custom logs to Log Analytics",
                "type": "PowerShell",
                "scriptUri": "[uri(parameters('_artifactsLocation'), concat('runbooks/data-collection/Ingest-OptimizationCSVExportsToLogAnalytics.ps1', parameters('_artifactsLocationSasToken')))]"
            }
        ],
        "automationVariables": [
            {
                "name": "Internal_AROResourceGroupName",
                "description": "ARO Azure Automation Account resource group name",
                "value": "[concat('\"',resourceGroup().name,'\"')]"
            },
            {
                "name": "External_ExcludeVMNames",
                "description": "Excluded VMs as comma separated list: vm1,vm2,vm3",
                "value": "[concat('\"','\"')]"
            },
            {
                "name": "External_ResourceGroupNames",
                "description": "Resource groups (as comma seperated) targeted for Snooze actions: rg1,rg2,rg3",
                "value": "[concat('\"','\"')]"
            },
            {
                "name": "External_AutoSnooze_Condition",
                "description": "This is the conditional operator required for configuring the condition before triggering an alert. Possible values are [GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual]",
                "value": "[concat('\"','LessThan','\"')]"
            },
            {
                "name": "External_AutoSnooze_Description",
                "description": "Alert to stop the VM if the CPU % exceed the threshold",
                "value": "[concat('\"','Alert to stop the VM if the CPU % exceed the threshold','\"')]"
            },
            {
                "name": "External_AutoSnooze_MetricName",
                "description": "Name of the metric the Azure Alert rule is to be configured for",
                "value": "[concat('\"','Percentage CPU','\"')]"
            },
            {
                "name": "External_AutoSnooze_Threshold",
                "description": "Threshold for the Azure Alert rule. Possible percentage values ranging from 1 to 100",
                "value": "[concat('\"','5','\"')]"
            },
            {
                "name": "External_AutoSnooze_TimeAggregationOperator",
                "description": "The time aggregation operator which will be applied to the selected window size to evaluate the condition. Possible values are [Average, Minimum, Maximum, Total, Last]",
                "value": "[concat('\"','Average','\"')]"
            },
            {
                "name": "External_AutoSnooze_TimeWindow",
                "description": "The window size over which Azure will analyze selected metric for triggering an alert. This parameter accepts input in timespan format. Possible values are from 5 mins to 6 hours.",
                "value": "[concat('\"','06:00:00','\"')]"
            }
        ]
    },
    "resources": [
        // Log Analytics Workspace
        {
            "condition": "[equals(parameters('logAnalyticsReuse'), 'false')]",
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "[variables('apiVersions').operationalInsights]",
            "name": "[parameters('logAnalyticsWorkspaceName')]",
            "location": "[parameters('projectLocation')]",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": "[parameters('logAnalyticsRetentionDays')]"
            }
        },
        // Storage Account
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('apiVersions').storage]",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('projectLocation')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Cool"
            }
        },
        // Storage Account Blob Services
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "[variables('apiVersions').storage]",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        // Storage Account ARG Disk exports container
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "[variables('apiVersions').storage]",
            "name": "[concat(variables('storageAccountName'), '/default/argdiskexports')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        // Storage Account ARG VM exports container
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "[variables('apiVersions').storage]",
            "name": "[concat(variables('storageAccountName'), '/default/argvmexports')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        // Storage Account Advisor Cost exports container
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "[variables('apiVersions').storage]",
            "name": "[concat(variables('storageAccountName'), '/default/advisorcostexports')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        // Storage Account Recommendations exports container
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "[variables('apiVersions').storage]",
            "name": "[concat(variables('storageAccountName'), '/default/recommendationsexports')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        // Azure SQL Server
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "[variables('apiVersions').sql]",
            "name": "[variables('sqlServerName')]",
            "location": "[parameters('projectLocation')]",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "[parameters('sqlAdminLogin')]",
                "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
                "version": "12.0"
            }
        },
        // Azure SQL Database
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "[variables('apiVersions').sql]",
            "name": "[concat(variables('sqlServerName'), '/optimizationengine')]",
            "location": "[parameters('projectLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
            ],
            "sku": {
                "name": "GP_S_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 1
            },
            "kind": "v12.0,user,vcore,serverless",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 3221225472,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "readReplicaCount": 0,
                "autoPauseDelay": 60,
                "storageAccountType": "GRS",
                "minCapacity": 0.5
            }
        },
        // Azure SQL backup retention policy
        {
            "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
            "apiVersion": "[variables('apiVersions').sql]",
            "name": "[concat(variables('sqlServerName'), '/optimizationengine/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), 'optimizationengine')]",
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
            ],
            "properties": {
                "retentionDays": "[parameters('sqlBackupRetentionDays')]"
            }
        },
        // Automation Account
        {
            "type": "Microsoft.Automation/automationAccounts",
            "apiVersion": "[variables('apiVersions').automation]",
            "name": "[variables('automationAccountName')]",
            "location": "[parameters('projectLocation')]",
            "properties": {
                "sku": {
                    "name": "Basic"
                }
            }
        },
        // Automation Modules (Az.Account)
        {
            "comments": "provision the Az.Accounts module first since others are depenedent on it",
            "name": "[concat(variables('automationAccountName'), '/', variables('Az.Accounts').name)]",
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "[variables('apiVersions').automation]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "contentLink": {
                    "uri": "[variables('Az.Accounts').url]"
                }
            }
        },
        // Automation Modules (other)
        {
            "name": "[concat(variables('automationAccountName'), '/', variables('psModules')[copyIndex()].name)]",
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "[variables('apiVersions').automation]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[variables('Az.Accounts').name]"
            ],
            "copy": {
                "name": "modulesLoop",
                "count": "[length(variables('psModules'))]"
            },
            "properties": {
                "contentLink": {
                    "uri": "[variables('psModules')[copyIndex()].url]"
                }
            }
        },
        // Automation Runbooks
        {
            "name": "[concat(variables('automationAccountName'), '/', variables('runbooks')[copyIndex()].name)]",
            "type": "Microsoft.Automation/automationAccounts/runbooks",
            "apiVersion": "[variables('apiVersions').automation]",
            "location": "[parameters('projectLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[variables('Az.Accounts').name]",
                "modulesLoop"
            ],
            "copy": {
                "name": "runbooksLoop",
                "count": "[length(variables('runbooks'))]"
            },
            "properties": {
                "runbookType": "[variables('runbooks')[copyIndex()].type]",
                "logProgress": false,
                "logVerbose": false,
                "description": "[variables('runbooks')[copyIndex()].description]",
                "publishContentLink": {
                    "uri": "[variables('runbooks')[copyIndex()].scriptUri]",
                    "version": "[variables('runbooks')[copyIndex()].version]"
                }
            }
        }/*,
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(parameters('automationAccountName'), '/', variables('automationVariables')[copyIndex()].name)]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "copy": {
                "name": "variableLoop",
                "count": "[length(variables('automationVariables'))]"
            },
            "properties": {
                "description": "[variables('automationVariables')[copyIndex()].description]",
                "value": "[variables('automationVariables')[copyIndex()].value]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(parameters('automationAccountName'), '/', variables('internalAzureSubscriptionId').name)]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "description": "[variables('internalAzureSubscriptionId').description]",
                "isEncrypted": 1,
                "type": "string",
                "value": "[variables('internalAzureSubscriptionId').value]"
            }
        },
        {
            "name": "[concat(parameters('automationAccountName'), '/', variables('azureCredentials'))]",
            "type": "Microsoft.Automation/automationAccounts/credentials",
            "apiVersion": "2020-01-13-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "description": "Azure Subscription Credentials",
                "password": "[parameters('azureAdminPwd')]",
                "userName": "[parameters('azureAdmin')]"
            }
        },
        {
            "name": "[concat(parameters('automationAccountName'), '/', 'startBootstrap')]",
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2020-01-13-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]",
                "[variables('runbooks')[0].name]"
            ],
            "properties": {
                "description": "Starts the bootstrap runbooks",
                "expiryTime": "9999-12-31T17:59:00-06:00",
                "isEnabled": true,
                "frequency": "OneTime"
            }
        },
        {
            "name": "[concat(parameters('automationAccountName'), '/', parameters('newGuid'))]",
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]",
                "startBootstrap",
                "modulesLoop"
            ],
            "properties": {
                "schedule": {
                    "name": "startBootstrap"
                },
                "runbook": {
                    "name": "Bootstrap_Main"
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/09de85b3-8a34-4fb7-8d73-2da6ad005a18')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "runbook": {
                    "name": "Ingest-AzureStorageCSVToLogAnalytics"
                },
                "schedule": {
                    "name": "IngestVmCSV-Daily"
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/559405d0-8a3f-4ff0-a7fe-6566a649c1f8')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "runbook": {
                    "name": "Ingest-AzureStorageCSVToLogAnalytics"
                },
                "schedule": {
                    "name": "IngestDiskCSV-Daily"
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/590070ed-4620-4e41-942c-e4aa188c0ff7')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "runbook": {
                    "name": "Ingest-AzureStorageCSVToLogAnalytics"
                },
                "schedule": {
                    "name": "IngestBillingCSV-Daily"
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/a705c821-ffe9-4448-b7fb-065e805fa937')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "runbook": {
                    "name": "Export-ConsumptionToBlobStorage"
                },
                "schedule": {
                    "name": "ExportBilling-Daily"
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/af4cda5c-bae2-438f-b089-5ba8c7bba48d')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "runbook": {
                    "name": "Export-VirtualMachinePropertiesToBlobStorage"
                },
                "schedule": {
                    "name": "ExportARG-Daily"
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/be2b08fe-79e5-401f-88fd-f5c0d0b90b4b')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "runbook": {
                    "name": "Export-ManagedDiskPropertiesToBlobStorage"
                },
                "schedule": {
                    "name": "ExportARG-Daily"
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/ExportARG-Daily')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "startTime": "2019-09-25T17:06:00+01:00",
                "expiryTime": "9999-12-31T23:59:00+00:00",
                "interval": 1,
                "frequency": "Day",
                "timeZone": "Europe/Lisbon"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/ExportBilling-Daily')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "startTime": "2019-09-26T17:36:00+01:00",
                "expiryTime": "9999-12-31T23:59:00+00:00",
                "interval": 1,
                "frequency": "Day",
                "timeZone": "Europe/Lisbon"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/IngestBillingCSV-Daily')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "startTime": "2019-09-27T17:56:00+01:00",
                "expiryTime": "9999-12-31T23:59:00+00:00",
                "interval": 1,
                "frequency": "Day",
                "timeZone": "Europe/Lisbon"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/IngestDiskCSV-Daily')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "startTime": "2019-09-27T17:51:00+01:00",
                "expiryTime": "9999-12-31T23:59:00+00:00",
                "interval": 1,
                "frequency": "Day",
                "timeZone": "Europe/Lisbon"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/IngestVmCSV-Daily')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "startTime": "2019-10-03T17:51:00+01:00",
                "expiryTime": "9999-12-31T23:59:00+00:00",
                "interval": 1,
                "frequency": "Day",
                "timeZone": "Europe/Lisbon"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-ARGDiskContainer')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "\"argdiskexports\""
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-ARGVMContainer')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "\"argvmexports\""
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-BillingContainer')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "\"billingexports\""
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-BillingDaysBackwards')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "7"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-CloudEnvironment')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "\"AzureCloud\""
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-ControlTable')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "\"loganalyticsimportcontrol\""
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-ControlTablePartition')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "\"FFGLOBAL\""
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-ControlTableRG')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "\"farfetch-tests-rg\""
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-ControlTableSA')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "\"ffoptimizationpocsa\""
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-ControlTableSubId')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "\"dfabc7a1-ca6f-4a95-8a7a-faddb6ef9b7b\""
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-LogAnalyticsChunkSize')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "15000"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-LogAnalyticsLogPrefix')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "\"AzureOptimization_\""
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-LogAnalyticsWorkspaceId')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "\"2375a2c3-cde0-40f6-b0fb-3be9fb023456\""
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-LogAnalyticsWorkspaceKey')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": true
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-StorageSink')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "\"ffoptimizationpocsa\""
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-StorageSinkRG')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "\"farfetch-tests-rg\""
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('automationAccountName'), '/AzureOptimization-StorageSinkSubId')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": false,
                "value": "\"dfabc7a1-ca6f-4a95-8a7a-faddb6ef9b7b\""
            }
        }*/
    ]
}