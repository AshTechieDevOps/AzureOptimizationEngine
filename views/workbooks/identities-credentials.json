{
    "version": "Notebook/1.0",
    "items": [
      {
        "type": 9,
        "content": {
          "version": "KqlParameterItem/1.0",
          "parameters": [
            {
              "id": "a1de1642-eb3d-47b4-84b1-ab98bc398a5b",
              "version": "KqlParameterItem/1.0",
              "name": "TenantId",
              "label": "Azure AD Tenant",
              "type": 2,
              "multiSelect": true,
              "quote": "'",
              "delimiter": ",",
              "query": "AzureOptimizationAADObjectsV1_CL | distinct TenantGuid_g",
              "value": [
                "value::all"
              ],
              "typeSettings": {
                "additionalResourceOptions": [
                  "value::all"
                ]
              },
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            }
          ],
          "style": "pills",
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces"
        },
        "name": "tenantParam"
      },
      {
        "type": 11,
        "content": {
          "version": "LinkItem/1.0",
          "style": "tabs",
          "links": [
            {
              "id": "18ec41b4-6b72-4311-ae38-28ffb61afab1",
              "cellValue": "selectedTab",
              "linkTarget": "parameter",
              "linkLabel": "Azure AD Credentials",
              "subTarget": "aadCredentials",
              "style": "link"
            },
            {
              "id": "bd735f44-2601-43be-b9d2-537cbce18176",
              "cellValue": "selectedTab",
              "linkTarget": "parameter",
              "linkLabel": "Azure AD Roles",
              "subTarget": "aadRoles",
              "style": "link"
            },
            {
              "id": "98683d29-655a-4248-8774-a5934e575579",
              "cellValue": "selectedTab",
              "linkTarget": "parameter",
              "linkLabel": "Azure RM Roles",
              "subTarget": "armRoles",
              "style": "link"
            }
          ]
        },
        "name": "topLevelTabs"
      },
      {
        "type": 11,
        "content": {
          "version": "LinkItem/1.0",
          "style": "tabs",
          "links": [
            {
              "id": "ee2235e8-eb13-4e74-9f8c-e92f2af8b0ce",
              "cellValue": "selectedCredTab",
              "linkTarget": "parameter",
              "linkLabel": "Credentials about to expire",
              "subTarget": "expiringCreds",
              "style": "link"
            },
            {
              "id": "0bb5a248-8bb7-4ebf-a3ae-379b95ac8218",
              "cellValue": "selectedCredTab",
              "linkTarget": "parameter",
              "linkLabel": "Credentials not set to expire",
              "subTarget": "notExpiringCreds",
              "style": "link"
            },
            {
              "id": "c9398c96-ea60-4775-b03d-eaf7e5960e22",
              "cellValue": "selectedCredTab",
              "linkTarget": "parameter",
              "linkLabel": "Credentials expired",
              "subTarget": "expiredCreds",
              "style": "link"
            }
          ]
        },
        "conditionalVisibility": {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "aadCredentials"
        },
        "name": "aadCredsTabs"
      },
      {
        "type": 9,
        "content": {
          "version": "KqlParameterItem/1.0",
          "parameters": [
            {
              "id": "b284dfc4-2d79-4634-8b50-37fed8a67592",
              "version": "KqlParameterItem/1.0",
              "name": "ExpirySpan",
              "label": "Expires in (days)",
              "type": 1,
              "isRequired": true,
              "value": "30",
              "typeSettings": {
                "paramValidationRules": [
                  {
                    "regExp": "^[1-9][0-9]*$",
                    "match": true,
                    "message": "Must be an integer greater than 0"
                  }
                ]
              },
              "timeContext": {
                "durationMs": 86400000
              }
            }
          ],
          "style": "pills",
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces"
        },
        "conditionalVisibilities": [
          {
            "parameterName": "selectedTab",
            "comparison": "isEqualTo",
            "value": "aadCredentials"
          },
          {
            "parameterName": "selectedCredTab",
            "comparison": "isEqualTo",
            "value": "expiringCreds"
          }
        ],
        "name": "expiringCredsSpanParam"
      },
      {
        "type": 9,
        "content": {
          "version": "KqlParameterItem/1.0",
          "parameters": [
            {
              "id": "db97f60d-a481-430a-9320-da3b0f942540",
              "version": "KqlParameterItem/1.0",
              "name": "MinExpirySpan",
              "label": "Expires at least in (days)",
              "type": 1,
              "isRequired": true,
              "value": "365",
              "typeSettings": {
                "paramValidationRules": [
                  {
                    "regExp": "^[1-9][0-9]*$",
                    "match": true,
                    "message": "Must be an integer greater than 0"
                  }
                ]
              },
              "timeContext": {
                "durationMs": 86400000
              }
            }
          ],
          "style": "pills",
          "doNotRunWhenHidden": true,
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces"
        },
        "conditionalVisibilities": [
          {
            "parameterName": "selectedTab",
            "comparison": "isEqualTo",
            "value": "aadCredentials"
          },
          {
            "parameterName": "selectedCredTab",
            "comparison": "isEqualTo",
            "value": "notExpiringCreds"
          }
        ],
        "name": "notExpiringCredsSpanParam"
      },
      {
        "type": 3,
        "content": {
          "version": "KqlItem/1.0",
          "query": "let expiryInterval = {ExpirySpan}d;\r\nlet AADObjectsTable = materialize(AzureOptimizationAADObjectsV1_CL | where TimeGenerated > ago(1d) | where TenantGuid_g in ({TenantId}));\r\nlet RBACAssignmentsTable = materialize(AzureOptimizationRBACAssignmentsV1_CL | where TimeGenerated > ago(1d) | where TenantGuid_g in ({TenantId}));\r\nlet AppsAndKeys = materialize (AADObjectsTable\r\n| where ObjectType_s in ('Application','ServicePrincipal')\r\n| where PrincipalNames_s !has 'https://identity.azure.net'\r\n| where Keys_s startswith '['\r\n| extend Keys = parse_json(Keys_s)\r\n| project-away Keys_s\r\n| mv-expand Keys\r\n| evaluate bag_unpack(Keys)\r\n| union ( \r\n    AADObjectsTable\r\n    | where ObjectType_s in ('Application','ServicePrincipal')\r\n    | where PrincipalNames_s !has 'https://identity.azure.net'\r\n    | where isnotempty(Keys_s) and Keys_s !startswith '['\r\n    | extend Keys = parse_json(Keys_s)\r\n    | project-away Keys_s\r\n    | evaluate bag_unpack(Keys)\r\n)\r\n);\r\nlet ExpirationInRisk = AppsAndKeys\r\n| where EndDate < now()+expiryInterval and EndDate > now()\r\n| project ApplicationId_g, KeyId, RiskDate = EndDate;\r\nlet NotInRisk = AppsAndKeys\r\n| where EndDate > now()+expiryInterval\r\n| project ApplicationId_g, KeyId, ComfortDate = EndDate;\r\nlet ApplicationsInRisk = ExpirationInRisk\r\n| join kind=leftouter ( NotInRisk ) on ApplicationId_g\r\n| where isempty(ComfortDate)\r\n| summarize ExpiresOn = max(RiskDate) by ApplicationId_g;\r\nlet ServicePrincipals = materialize(AADObjectsTable\r\n| where isnotempty(ObjectId_g)\r\n| where ObjectType_s == 'ServicePrincipal'\r\n| project SPNId = ObjectId_g, ApplicationId_g, PrincipalNames_s, DisplayName_s);\r\nlet GroupMemberships = AADObjectsTable\r\n| where ObjectType_s == 'Group' and SecurityEnabled_s == 'True'\r\n| where PrincipalNames_s startswith '['\r\n| extend GroupMember = parse_json(PrincipalNames_s)\r\n| project-away PrincipalNames_s\r\n| mv-expand GroupMember\r\n| union (\r\n    AADObjectsTable\r\n    | where ObjectType_s == 'Group' and SecurityEnabled_s == 'True'\r\n    | where isnotempty(PrincipalNames_s) and PrincipalNames_s !startswith '['\r\n    | extend GroupMember = parse_json(PrincipalNames_s)\r\n    | project-away PrincipalNames_s\r\n)\r\n| project GroupId = ObjectId_g, GroupName = DisplayName_s, GroupMember = tostring(GroupMember), TenantGuid_g, Cloud_s;\r\nlet DirectAssignments = RBACAssignmentsTable\r\n| join kind=inner (\r\n    ServicePrincipals\r\n) on $left.PrincipalId_g == $right.SPNId\r\n| project ApplicationId_g, PrincipalNames_s, DisplayName_s, RoleDefinition_s, Scope_s, Assignment = 'Direct', Model_s, TenantGuid_g;\r\nlet GroupAssignments = RBACAssignmentsTable\r\n| join kind=inner (\r\n    GroupMemberships\r\n    | join kind=inner ( \r\n        ServicePrincipals\r\n    ) on $left.GroupMember == $right.SPNId\r\n) on $left.PrincipalId_g == $right.GroupId\r\n| project ApplicationId_g, PrincipalNames_s, DisplayName_s, RoleDefinition_s, Scope_s, Assignment = strcat('Group>',GroupName), Model_s, TenantGuid_g;\r\nAppsAndKeys\r\n| join kind=inner (ApplicationsInRisk) on ApplicationId_g\r\n| summarize ExpiresOn = max(EndDate) by ApplicationId_g, DisplayName_s, Cloud_s, KeyType, TenantGuid_g\r\n| join kind=leftouter (\r\n    GroupAssignments\r\n    | union DirectAssignments\r\n) on ApplicationId_g\r\n| summarize countif(isnotempty(RoleDefinition_s)) by DisplayName_s, ExpiresOn, KeyType, TenantGuid_g, ApplicationId_g\r\n| order by countif_ desc, ExpiresOn asc",
          "size": 0,
          "timeContext": {
            "durationMs": 86400000
          },
          "exportFieldName": "ApplicationId_g",
          "exportParameterName": "selectedApp",
          "showExportToExcel": true,
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces",
          "gridSettings": {
            "formatters": [
              {
                "columnMatch": "countif_",
                "formatter": 18,
                "formatOptions": {
                  "thresholdsOptions": "icons",
                  "thresholdsGrid": [
                    {
                      "operator": ">",
                      "thresholdValue": "0",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "Blank",
                      "text": "{0}{1}"
                    }
                  ]
                }
              }
            ],
            "labelSettings": [
              {
                "columnId": "DisplayName_s",
                "label": "Application"
              },
              {
                "columnId": "ExpiresOn",
                "label": "Expires On"
              },
              {
                "columnId": "KeyType",
                "label": "Key Type"
              },
              {
                "columnId": "TenantGuid_g",
                "label": "Tenant ID"
              },
              {
                "columnId": "ApplicationId_g",
                "label": "Application ID"
              },
              {
                "columnId": "countif_",
                "label": "Role Assignments"
              }
            ]
          }
        },
        "conditionalVisibilities": [
          {
            "parameterName": "selectedTab",
            "comparison": "isEqualTo",
            "value": "aadCredentials"
          },
          {
            "parameterName": "selectedCredTab",
            "comparison": "isEqualTo",
            "value": "expiringCreds"
          }
        ],
        "name": "expiringCredsTable"
      },
      {
        "type": 3,
        "content": {
          "version": "KqlItem/1.0",
          "query": "let expiryInterval = {MinExpirySpan}d;\r\nlet AADObjectsTable = materialize(AzureOptimizationAADObjectsV1_CL | where TimeGenerated > ago(1d) | where TenantGuid_g in ({TenantId}));\r\nlet RBACAssignmentsTable = materialize(AzureOptimizationRBACAssignmentsV1_CL | where TimeGenerated > ago(1d) | where TenantGuid_g in ({TenantId}));\r\nlet AppsAndKeys = materialize (AADObjectsTable\r\n| where ObjectType_s in ('Application','ServicePrincipal')\r\n| where PrincipalNames_s !has 'https://identity.azure.net'\r\n| where Keys_s startswith '['\r\n| extend Keys = parse_json(Keys_s)\r\n| project-away Keys_s\r\n| mv-expand Keys\r\n| evaluate bag_unpack(Keys)\r\n| union ( \r\n    AADObjectsTable\r\n    | where ObjectType_s in ('Application','ServicePrincipal')\r\n    | where PrincipalNames_s !has 'https://identity.azure.net'\r\n    | where isnotempty(Keys_s) and Keys_s !startswith '['\r\n    | extend Keys = parse_json(Keys_s)\r\n    | project-away Keys_s\r\n    | evaluate bag_unpack(Keys)\r\n)\r\n);\r\nlet NotExpiringSoon = AppsAndKeys\r\n| where EndDate > now()+expiryInterval\r\n| project ApplicationId_g, ObjectType_s, DisplayName_s, Cloud_s, KeyType, TenantGuid_g, ExpiresOn = EndDate;\r\nlet ServicePrincipals = materialize(AADObjectsTable\r\n| where isnotempty(ObjectId_g)\r\n| where ObjectType_s == 'ServicePrincipal'\r\n| project SPNId = ObjectId_g, ApplicationId_g, PrincipalNames_s, DisplayName_s);\r\nlet GroupMemberships = AADObjectsTable\r\n| where ObjectType_s == 'Group' and SecurityEnabled_s == 'True'\r\n| where PrincipalNames_s startswith '['\r\n| extend GroupMember = parse_json(PrincipalNames_s)\r\n| project-away PrincipalNames_s\r\n| mv-expand GroupMember\r\n| union (\r\n    AADObjectsTable\r\n    | where ObjectType_s == 'Group' and SecurityEnabled_s == 'True'\r\n    | where isnotempty(PrincipalNames_s) and PrincipalNames_s !startswith '['\r\n    | extend GroupMember = parse_json(PrincipalNames_s)\r\n    | project-away PrincipalNames_s\r\n)\r\n| project GroupId = ObjectId_g, GroupName = DisplayName_s, GroupMember = tostring(GroupMember), TenantGuid_g, Cloud_s;\r\nlet DirectAssignments = RBACAssignmentsTable\r\n| join kind=inner (\r\n    ServicePrincipals\r\n) on $left.PrincipalId_g == $right.SPNId\r\n| project ApplicationId_g, PrincipalNames_s, DisplayName_s, RoleDefinition_s, Scope_s, Assignment = 'Direct', Model_s, TenantGuid_g;\r\nlet GroupAssignments = RBACAssignmentsTable\r\n| join kind=inner (\r\n    GroupMemberships\r\n    | join kind=inner ( \r\n        ServicePrincipals\r\n    ) on $left.GroupMember == $right.SPNId\r\n) on $left.PrincipalId_g == $right.GroupId\r\n| project ApplicationId_g, PrincipalNames_s, DisplayName_s, RoleDefinition_s, Scope_s, Assignment = strcat('Group>',GroupName), Model_s, TenantGuid_g;\r\nNotExpiringSoon\r\n| join kind=leftouter (\r\n    GroupAssignments\r\n    | union DirectAssignments\r\n) on ApplicationId_g\r\n| summarize countif(isnotempty(RoleDefinition_s)) by DisplayName_s, ExpiresOn, KeyType, TenantGuid_g, ApplicationId_g\r\n| order by countif_ desc, ExpiresOn desc",
          "size": 0,
          "timeContext": {
            "durationMs": 86400000
          },
          "exportFieldName": "ApplicationId_g",
          "exportParameterName": "selectedApp",
          "showExportToExcel": true,
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces",
          "gridSettings": {
            "formatters": [
              {
                "columnMatch": "countif_",
                "formatter": 18,
                "formatOptions": {
                  "thresholdsOptions": "icons",
                  "thresholdsGrid": [
                    {
                      "operator": ">",
                      "thresholdValue": "0",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "Blank",
                      "text": "{0}{1}"
                    }
                  ]
                }
              }
            ],
            "labelSettings": [
              {
                "columnId": "DisplayName_s",
                "label": "Application"
              },
              {
                "columnId": "ExpiresOn",
                "label": "Expires On"
              },
              {
                "columnId": "KeyType",
                "label": "Key Type"
              },
              {
                "columnId": "TenantGuid_g",
                "label": "Tenant ID"
              },
              {
                "columnId": "ApplicationId_g",
                "label": "Application ID"
              },
              {
                "columnId": "countif_",
                "label": "Role Assignments"
              }
            ]
          }
        },
        "conditionalVisibilities": [
          {
            "parameterName": "selectedTab",
            "comparison": "isEqualTo",
            "value": "aadCredentials"
          },
          {
            "parameterName": "selectedCredTab",
            "comparison": "isEqualTo",
            "value": "notExpiringCreds"
          }
        ],
        "name": "notExpiringCredsTable"
      },
      {
        "type": 3,
        "content": {
          "version": "KqlItem/1.0",
          "query": "let AADObjectsTable = materialize(AzureOptimizationAADObjectsV1_CL | where TimeGenerated > ago(1d) | where TenantGuid_g in ({TenantId}));\r\nlet RBACAssignmentsTable = materialize(AzureOptimizationRBACAssignmentsV1_CL | where TimeGenerated > ago(1d) | where TenantGuid_g in ({TenantId}));\r\nlet AppsAndKeys = materialize (AADObjectsTable\r\n| where ObjectType_s in ('Application','ServicePrincipal')\r\n| where PrincipalNames_s !has 'https://identity.azure.net'\r\n| where Keys_s startswith '['\r\n| extend Keys = parse_json(Keys_s)\r\n| project-away Keys_s\r\n| mv-expand Keys\r\n| evaluate bag_unpack(Keys)\r\n| union ( \r\n    AADObjectsTable\r\n    | where ObjectType_s in ('Application','ServicePrincipal')\r\n    | where PrincipalNames_s !has 'https://identity.azure.net'\r\n    | where isnotempty(Keys_s) and Keys_s !startswith '['\r\n    | extend Keys = parse_json(Keys_s)\r\n    | project-away Keys_s\r\n    | evaluate bag_unpack(Keys)\r\n)\r\n);\r\nlet ExpirationInRisk = AppsAndKeys\r\n| where EndDate < now()\r\n| project ApplicationId_g, KeyId, RiskDate = EndDate;\r\nlet NotInRisk = AppsAndKeys\r\n| where EndDate > now()\r\n| project ApplicationId_g, KeyId, ComfortDate = EndDate;\r\nlet ApplicationsInRisk = ExpirationInRisk\r\n| join kind=leftouter ( NotInRisk ) on ApplicationId_g\r\n| where isempty(ComfortDate)\r\n| summarize ExpiresOn = max(RiskDate) by ApplicationId_g;\r\nlet ServicePrincipals = materialize(AADObjectsTable\r\n| where isnotempty(ObjectId_g)\r\n| where ObjectType_s == 'ServicePrincipal'\r\n| project SPNId = ObjectId_g, ApplicationId_g, PrincipalNames_s, DisplayName_s);\r\nlet GroupMemberships = AADObjectsTable\r\n| where ObjectType_s == 'Group' and SecurityEnabled_s == 'True'\r\n| where PrincipalNames_s startswith '['\r\n| extend GroupMember = parse_json(PrincipalNames_s)\r\n| project-away PrincipalNames_s\r\n| mv-expand GroupMember\r\n| union (\r\n    AADObjectsTable\r\n    | where ObjectType_s == 'Group' and SecurityEnabled_s == 'True'\r\n    | where isnotempty(PrincipalNames_s) and PrincipalNames_s !startswith '['\r\n    | extend GroupMember = parse_json(PrincipalNames_s)\r\n    | project-away PrincipalNames_s\r\n)\r\n| project GroupId = ObjectId_g, GroupName = DisplayName_s, GroupMember = tostring(GroupMember), TenantGuid_g, Cloud_s;\r\nlet DirectAssignments = RBACAssignmentsTable\r\n| join kind=inner (\r\n    ServicePrincipals\r\n) on $left.PrincipalId_g == $right.SPNId\r\n| project ApplicationId_g, PrincipalNames_s, DisplayName_s, RoleDefinition_s, Scope_s, Assignment = 'Direct', Model_s, TenantGuid_g;\r\nlet GroupAssignments = RBACAssignmentsTable\r\n| join kind=inner (\r\n    GroupMemberships\r\n    | join kind=inner ( \r\n        ServicePrincipals\r\n    ) on $left.GroupMember == $right.SPNId\r\n) on $left.PrincipalId_g == $right.GroupId\r\n| project ApplicationId_g, PrincipalNames_s, DisplayName_s, RoleDefinition_s, Scope_s, Assignment = strcat('Group>',GroupName), Model_s, TenantGuid_g;\r\nAppsAndKeys\r\n| join kind=inner (ApplicationsInRisk) on ApplicationId_g\r\n| summarize ExpiresOn = max(EndDate) by ApplicationId_g, DisplayName_s, Cloud_s, KeyType, TenantGuid_g\r\n| join kind=leftouter (\r\n    GroupAssignments\r\n    | union DirectAssignments\r\n) on ApplicationId_g\r\n| summarize countif(isnotempty(RoleDefinition_s)) by DisplayName_s, ExpiresOn, KeyType, TenantGuid_g, ApplicationId_g\r\n| order by countif_ desc",
          "size": 0,
          "timeContext": {
            "durationMs": 86400000
          },
          "exportFieldName": "ApplicationId_g",
          "exportParameterName": "selectedApp",
          "showExportToExcel": true,
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces",
          "gridSettings": {
            "formatters": [
              {
                "columnMatch": "countif_",
                "formatter": 18,
                "formatOptions": {
                  "thresholdsOptions": "icons",
                  "thresholdsGrid": [
                    {
                      "operator": ">",
                      "thresholdValue": "0",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "Blank",
                      "text": "{0}{1}"
                    }
                  ]
                }
              }
            ],
            "labelSettings": [
              {
                "columnId": "DisplayName_s",
                "label": "Application"
              },
              {
                "columnId": "ExpiresOn",
                "label": "Expires On"
              },
              {
                "columnId": "KeyType",
                "label": "Key Type"
              },
              {
                "columnId": "TenantGuid_g",
                "label": "Tenant ID"
              },
              {
                "columnId": "ApplicationId_g",
                "label": "Application ID"
              },
              {
                "columnId": "countif_",
                "label": "Role Assignments"
              }
            ]
          }
        },
        "conditionalVisibilities": [
          {
            "parameterName": "selectedTab",
            "comparison": "isEqualTo",
            "value": "aadCredentials"
          },
          {
            "parameterName": "selectedCredTab",
            "comparison": "isEqualTo",
            "value": "expiredCreds"
          }
        ],
        "name": "expiredCredsTable"
      },
      {
        "type": 3,
        "content": {
          "version": "KqlItem/1.0",
          "query": "let AADObjectsTable = materialize(AzureOptimizationAADObjectsV1_CL | where TimeGenerated > ago(1d) | where TenantGuid_g in ({TenantId}));\r\nlet RBACAssignmentsTable = materialize(AzureOptimizationRBACAssignmentsV1_CL | where TimeGenerated > ago(1d) | where TenantGuid_g in ({TenantId}));\r\nlet ServicePrincipals = materialize(AADObjectsTable\r\n| where ApplicationId_g == '{selectedApp}'\r\n| where isnotempty(ObjectId_g)\r\n| where ObjectType_s == 'ServicePrincipal'\r\n| project SPNId = ObjectId_g, ApplicationId_g, PrincipalNames_s, DisplayName_s);\r\nlet GroupMemberships = AADObjectsTable\r\n| where ObjectType_s == 'Group' and SecurityEnabled_s == 'True'\r\n| where PrincipalNames_s startswith '['\r\n| extend GroupMember = parse_json(PrincipalNames_s)\r\n| project-away PrincipalNames_s\r\n| mv-expand GroupMember\r\n| union (\r\n    AADObjectsTable\r\n    | where ObjectType_s == 'Group' and SecurityEnabled_s == 'True'\r\n    | where isnotempty(PrincipalNames_s) and PrincipalNames_s !startswith '['\r\n    | extend GroupMember = parse_json(PrincipalNames_s)\r\n    | project-away PrincipalNames_s\r\n)\r\n| project GroupId = ObjectId_g, GroupName = DisplayName_s, GroupMember = tostring(GroupMember), TenantGuid_g, Cloud_s;\r\nlet DirectAssignments = RBACAssignmentsTable\r\n| join kind=inner (\r\n    ServicePrincipals\r\n) on $left.PrincipalId_g == $right.SPNId\r\n| project ApplicationId_g, PrincipalNames_s, DisplayName_s, RoleDefinition_s, Scope_s, Assignment = 'Direct', Model_s, TenantGuid_g;\r\nlet GroupAssignments = RBACAssignmentsTable\r\n| join kind=inner (\r\n    GroupMemberships\r\n    | join kind=inner ( \r\n        ServicePrincipals\r\n    ) on $left.GroupMember == $right.SPNId\r\n) on $left.PrincipalId_g == $right.GroupId\r\n| project ApplicationId_g, PrincipalNames_s, DisplayName_s, RoleDefinition_s, Scope_s, Assignment = strcat('Group>',GroupName), Model_s, TenantGuid_g;\r\nGroupAssignments\r\n| union DirectAssignments\r\n| distinct DisplayName_s, ApplicationId_g, RoleDefinition_s, Scope_s, Assignment, Model_s",
          "size": 1,
          "title": "Roles assigned to application",
          "noDataMessage": "No roles assigned",
          "timeContext": {
            "durationMs": 86400000
          },
          "exportFieldName": "ApplicationId_g",
          "exportParameterName": "selectedApp",
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces"
        },
        "conditionalVisibility": {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "aadCredentials"
        },
        "name": "assignedRolesTable"
      }
    ],
    "fallbackResourceIds": [
      "/subscriptions/6cb52f26-4370-4d50-afa5-b47282f84704/resourceGroups/CostOptimizationStorageAccount/providers/Microsoft.OperationalInsights/workspaces/FF-Optimization"
    ],
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
  }